print(">>> app.py is running")

from flask import Flask, request, render_template
import os
from dotenv import load_dotenv

print(">>> Imports completed")

# Import our custom modules
import generate_text
import tts

print(">>> Custom modules imported")

app = Flask(__name__)
print(">>> Flask app initialized")

# Load environment variables from .env
load_dotenv()
print(">>> .env file loaded")

openai_api_key = os.getenv("OPENAI_API_KEY")
if not openai_api_key:
    raise RuntimeError("❌ OPENAI_API_KEY not set in .env file")
print(">>> OPENAI_API_KEY loaded")

# Set OpenAI API key for newer SDK (if needed in generate_text)
import openai
openai.api_key = openai_api_key
print(">>> OpenAI API key configured")

@app.route('/', methods=['GET'])
def index():
    print(">>> GET / - index() called")
    return render_template('index.html')

@app.route('/generate', methods=['POST'])
def generate():
    print(">>> POST /generate - generate() called")
    topic = request.form['topic'].strip()
    print(f">>> Topic received: {topic}")

    overview_text = generate_text.generate_overview(topic)
    print(">>> Overview text generated")

    audio_path = 'audio/overview.wav'
    tts.text_to_speech(overview_text, os.path.join('static', audio_path))
    print(">>> Overview audio generated at:", audio_path)

    return render_template('result.html',
                           topic=topic,
                           overview_text=overview_text,
                           overview_audio=audio_path)

@app.route('/subtopic', methods=['POST'])
def subtopic():
    print(">>> POST /subtopic - subtopic() called")
    topic = request.form['topic']
    overview_text = request.form['overview_text']
    subtopic_choice = request.form['subtopic']

    print(f">>> Subtopic selected: {subtopic_choice} for topic: {topic}")

    subtopic_text = generate_text.generate_subtopic(topic, subtopic_choice)
    print(">>> Subtopic text generated")

    sub_audio_path = 'audio/subtopic.wav'
    tts.text_to_speech(subtopic_text, os.path.join('static', sub_audio_path))
    print(">>> Subtopic audio generated at:", sub_audio_path)

    return render_template('result.html',
                           topic=topic,
                           overview_text=overview_text,
                           overview_audio='audio/overview.wav',
                           subtopic=subtopic_choice,
                           subtopic_text=subtopic_text,
                           subtopic_audio=sub_audio_path)

# Main entry point
if __name__ == '__main__':
    print(">>> Starting Flask development server...")
    app.run(debug=True)
